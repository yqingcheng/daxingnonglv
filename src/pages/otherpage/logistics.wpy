<style lang="scss">

  .logistics {
    &_wrap {
      padding-bottom: 100rpx;
    }
    &_traces {
      padding-top: 80rpx;
      &_items {
        $size: 160rpx;
        display: flex;
        color: #999;
        &_date {

          width: $size;
          height: $size;
          flex-shrink: 0;
          &_table {
            width: $size;
            height: $size;
            font-size: 32rpx;
            display: table-cell;
            // vertical-align: middle;
            text-align: center;
          }
        }
        &_cont {
          flex-grow: 1;
          font-size: 32rpx;
          padding: 0 30rpx;
          border-left: 1px solid #efefef;
          position: relative;
          .icon_status {
            font-size: 24rpx;
            margin-left: -12rpx;
            position: absolute;
            left: 0;
            top: 0;
          }
        }
        &:last-child {
          .logistics_traces_items_cont {
            border-left: 1px solid #fff;
          }
        }
        &:first-child {
          color: #fa7b06;
          .icon_status {
            font-size: 32rpx;
            margin-left: -16rpx;
          }
        }
      }
    }
    &_goods_wrap {
      padding: 20rpx 30rpx;
      font-size: 32rpx;
      line-height: 50rpx;
      border-bottom: 10rpx solid #d9d9d9;
    }
    &_bottom {
      width: 100%;
      height: 100rpx;
      line-height: 100rpx;
      border: 1px solid #efefef;
      position: fixed;
      left: 0;
      bottom: 0;
      background: #fff;
      view {
        width: 240rpx;
        text-align: center;
        color: #fff;
        background: #fc3e62;
        float: right;
      }
    }
  }

</style>

<template>
  <view class="logistics_wrap">

    <view class="logistics_goods_wrap">
      <view>订单编号: {{goodsMsg.delivery_sn}}</view>
      <view>快递公司: {{goodsMsg.delivery_org}}</view>
      <view>发出时间: {{goodsMsg.updated_at}}</view>
    </view>

    <view class="logistics_traces">
      <repeat for="{{traces}}">
        <view class="logistics_traces_items">
          <view class="logistics_traces_items_date">
            <view class="logistics_traces_items_date_table">
              <view>{{item.date}}</view>
              <view>{{item.time}}</view>
            </view>
          </view>
          <view class="logistics_traces_items_cont">
            <view class="icon_status iconfont {{index == 0 ? 'icon-queren' : 'icon-queren'}}"></view>
            <view class="logistics_traces_items_table">{{item.expressStatus}}</view>
          </view>
        </view>
      </repeat>
    </view>

    <view class="logistics_bottom">
      <view @tap="determine">{{goodsMsg.text}}</view>
    </view>
    <toast/>
  </view>
</template>

<script>

  import wepy from 'wepy'
  //    import getExtJson from '../mixins/getExtJson'
  import Toast from 'wepy-com-toast'

  export default class logistics extends wepy.page {
    config = {
      navigationBarTitleText: '查看物流'
    }
    components = {
      toast: Toast
    }
    data = {
      traces: [],
      goodsMsg: {},
      api_host: ''
    }
    methods = {
      determine() {
        wepy.showModal({
          title: '提示',
          content: '请确认收到商品后再完成订单',
          success: (res) => {
            if (res.confirm) {
              wepy.request({
                url: `${this.api_host}/restapi/goods-order/finish/${this.goodsMsg.id}`,
                data: {
                  config_id: '622',
                  openid: wx.getStorageSync('openid')
                },
                method: 'PUT',
                header: {
                  'content-type': 'application/json'
                },
                success: (res) => {
                  if (res.data.success) {
                    this.$invoke("toast", "show", {
                      title: "订单完成",
                      imgClassName: "iconfont icon-duigou",
                      fontSize: 188
                    });
                    this.goodsMsg.text = '订单已完成'
                  }
                }
              })
            }
          }
        })
      }
    }

    getLogistics(id) {
      wepy.request({
        url: `${this.api_host}/appapi/kdniao/api`,
        method: 'POST',
        data: {
          order_id: id
        },
        success: (res) => {
          console.log(res)
          // let traces = res.data.data.Traces.unshift({
          //     AcceptTime: res.data.data.updated_at,
          //     AcceptStation: '商家已发货'
          // }).reverse()
          res.data.data.Traces.unshift({
            AcceptTime: res.data.data.updated_at,
            AcceptStation: '商家已发货'
          })
          let traces = res.data.data.Traces.reverse()

          traces.forEach(item => {
            this.traces.push({
              date: item.AcceptTime.split(' ')[0].substr(5),
              time: item.AcceptTime.split(' ')[1].substr(0, 5),
              expressStatus: item.AcceptStation
            })
          })
          console.log(this.traces, 1)
          this.$apply()
        }
      })
    }

    getGoodsInfo(id) {
      wepy.request({
        url: `${this.api_host}/restapi/goods-orders/${id}`,
        data: {
          config_id: '622',
          expand: 'goods'
        },
        success: (res) => {
          console.log(res)
          this.goodsMsg = {
            delivery_org: res.data.data.delivery_org,
            delivery_sn: res.data.data.delivery_sn,
            updated_at: res.data.data.updated_at,
            id: res.data.data.id,
            text: res.data.data.status != '已完成' ? '确认收货' : '订单已完成'
          }
          this.$apply()
        }
      })
    }

    onLoad(option) {
      this.api_host = this.$parent.globalData.api
      this.$apply()
//            getExtJson.call(this)
      this.getLogistics(option.id)
      this.getGoodsInfo(option.id)
    }
  }

</script>



